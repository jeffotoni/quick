### echo
post.list
bind
data_1MB_list
return c.JSON(http.StatusOK, my)

        /\      Grafana   /‾‾/  
    /\  /  \     |\  __   /  /   
   /  \/    \    | |/ /  /   ‾‾\ 
  /          \   |   (  |  (‾)  |
 / __________ \  |_|\_\  \_____/ 

     execution: local
        script: post.file.list.payload.js
        output: -

     scenarios: (100.00%) 1 scenario, 1000 max VUs, 1m32s max duration (incl. graceful stop):
              * default: Up to 1000 looping VUs for 1m2s over 3 stages (gracefulRampDown: 30s, gracefulStop: 30s)


     ✓ status is 200 or 201
     ✓ response contains JSON

     checks.........................: 100.00% 19774 out of 19774
     data_received..................: 4.6 GB  75 MB/s
     data_sent......................: 10 GB   167 MB/s
     http_req_blocked...............: avg=162.81µs min=2.42µs   med=5.63µs   max=492.77ms p(90)=169.63µs p(95)=224.47µs
     http_req_connecting............: avg=61.76µs  min=0s       med=0s       max=18.17ms  p(90)=115.59µs p(95)=151.8µs 
     http_req_duration..............: avg=3.45s    min=13.35ms  med=2.96s    max=20.02s   p(90)=7.16s    p(95)=9.62s   
       { expected_response:true }...: avg=3.45s    min=13.35ms  med=2.96s    max=20.02s   p(90)=7.16s    p(95)=9.62s   
     http_req_failed................: 0.00%   0 out of 9887
     http_req_receiving.............: avg=39.51ms  min=84.41µs  med=294.51µs max=3.62s    p(90)=2.29ms   p(95)=62.22ms 
     http_req_sending...............: avg=1.07ms   min=248.37µs med=497.55µs max=460.71ms p(90)=1.04ms   p(95)=1.78ms  
     http_req_tls_handshaking.......: avg=0s       min=0s       med=0s       max=0s       p(90)=0s       p(95)=0s      
     http_req_waiting...............: avg=3.41s    min=12.8ms   med=2.93s    max=20.02s   p(90)=7.04s    p(95)=9.55s   
     http_reqs......................: 9887    158.993907/s
     iteration_duration.............: avg=3.45s    min=13.64ms  med=2.96s    max=20.02s   p(90)=7.17s    p(95)=9.62s   
     iterations.....................: 9887    158.993907/s
     vus............................: 176     min=13             max=1000
     vus_max........................: 1000    min=1000           max=1000

    CPU consumption........................: 94.54% 
    Consumption of Memory ........................: 4.4% GB



### echo
post.list
BodyParser
data_1MB_list
return c.JSON(http.StatusOK, my)

         /\      Grafana   /‾‾/  
    /\  /  \     |\  __   /  /   
   /  \/    \    | |/ /  /   ‾‾\ 
  /          \   |   (  |  (‾)  |
 / __________ \  |_|\_\  \_____/ 

     execution: local
        script: post.file.list.payload.js
        output: -

     scenarios: (100.00%) 1 scenario, 1000 max VUs, 1m32s max duration (incl. graceful stop):
              * default: Up to 1000 looping VUs for 1m2s over 3 stages (gracefulRampDown: 30s, gracefulStop: 30s)


     ✓ status is 200 or 201
     ✓ response contains JSON

     checks.........................: 100.00% 21140 out of 21140
     data_received..................: 5.0 GB  79 MB/s
     data_sent......................: 11 GB   178 MB/s
     http_req_blocked...............: avg=67.32µs min=2.39µs   med=5.36µs   max=68.5ms  p(90)=42.13µs  p(95)=208.39µs
     http_req_connecting............: avg=49.6µs  min=0s       med=0s       max=68.44ms p(90)=0s       p(95)=143.27µs
     http_req_duration..............: avg=3.22s   min=12.99ms  med=2.5s     max=19.49s  p(90)=7.09s    p(95)=9.32s   
       { expected_response:true }...: avg=3.22s   min=12.99ms  med=2.5s     max=19.49s  p(90)=7.09s    p(95)=9.32s   
     http_req_failed................: 0.00%   0 out of 10570
     http_req_receiving.............: avg=24.37ms min=90.16µs  med=280.87µs max=5.45s   p(90)=1.3ms    p(95)=4.06ms  
     http_req_sending...............: avg=628.7µs min=266.78µs med=485.71µs max=40.77ms p(90)=775.17µs p(95)=1.17ms  
     http_req_tls_handshaking.......: avg=0s      min=0s       med=0s       max=0s      p(90)=0s       p(95)=0s      
     http_req_waiting...............: avg=3.19s   min=12.47ms  med=2.48s    max=19.49s  p(90)=7.04s    p(95)=9.24s   
     http_reqs......................: 10570   169.248985/s
     iteration_duration.............: avg=3.22s   min=13.3ms   med=2.5s     max=19.49s  p(90)=7.09s    p(95)=9.32s   
     iterations.....................: 10570   169.248985/s
     vus............................: 239     min=14             max=1000
     vus_max........................: 1000    min=1000           max=1000

    CPU consumption........................: 93.58%
    Consumption of Memory ........................: 4.4% GB



### Fiber
post.list
byte
data_1MB_list
return c.Status(200).JSON(my)

       /\      Grafana   /‾‾/  
    /\  /  \     |\  __   /  /   
   /  \/    \    | |/ /  /   ‾‾\ 
  /          \   |   (  |  (‾)  |
 / __________ \  |_|\_\  \_____/ 

     execution: local
        script: post.file.list.payload.js
        output: -

     scenarios: (100.00%) 1 scenario, 1000 max VUs, 1m32s max duration (incl. graceful stop):
              * default: Up to 1000 looping VUs for 1m2s over 3 stages (gracefulRampDown: 30s, gracefulStop: 30s)


     ✓ status is 200 or 201
     ✓ response contains JSON

     checks.........................: 100.00% 22046 out of 22046
     data_received..................: 5.2 GB  74 MB/s
     data_sent......................: 12 GB   166 MB/s
     http_req_blocked...............: avg=165.46µs min=2.27µs   med=5.2µs   max=213.85ms p(90)=18.49µs  p(95)=203.38µs
     http_req_connecting............: avg=83.32µs  min=0s       med=0s      max=93.63ms  p(90)=0s       p(95)=138.3µs 
     http_req_duration..............: avg=3.4s     min=12.97ms  med=2.68s   max=24.6s    p(90)=7.17s    p(95)=10.44s  
       { expected_response:true }...: avg=3.4s     min=12.97ms  med=2.68s   max=24.6s    p(90)=7.17s    p(95)=10.44s  
     http_req_failed................: 0.00%   0 out of 11023
     http_req_receiving.............: avg=77.45ms  min=83.52µs  med=232.9µs max=10.35s   p(90)=2.09ms   p(95)=210.46ms
     http_req_sending...............: avg=1.14ms   min=228.79µs med=481.9µs max=380.94ms p(90)=913.62µs p(95)=1.57ms  
     http_req_tls_handshaking.......: avg=0s       min=0s       med=0s      max=0s       p(90)=0s       p(95)=0s      
     http_req_waiting...............: avg=3.32s    min=12.38ms  med=2.67s   max=22.8s    p(90)=7.14s    p(95)=9.85s   
     http_reqs......................: 11023   158.425424/s
     iteration_duration.............: avg=3.42s    min=13.39ms  med=2.69s   max=24.6s    p(90)=7.23s    p(95)=10.65s  
     iterations.....................: 11023   158.425424/s
     vus............................: 55      min=13             max=1000
     vus_max........................: 1000    min=1000           max=1000

    CPU consumption........................: 90.79% 
    Consumption of Memory ........................: 6.3% GB


### Fiber
post.list
Body
data_307.6kB_list
return c.Send(response)


       /\      Grafana   /‾‾/  
    /\  /  \     |\  __   /  /   
   /  \/    \    | |/ /  /   ‾‾\ 
  /          \   |   (  |  (‾)  |
 / __________ \  |_|\_\  \_____/ 

     execution: local
        script: post.file.list.payload.js
        output: -

     scenarios: (100.00%) 1 scenario, 1000 max VUs, 1m22s max duration (incl. graceful stop):
              * default: Up to 1000 looping VUs for 52s over 3 stages (gracefulRampDown: 30s, gracefulStop: 30s)


     ✓ status is 200 or 201
     ✓ response contains JSON

     checks.........................: 100.00% 63668 out of 63668
     data_received..................: 4.4 GB  84 MB/s
     data_sent......................: 9.8 GB  188 MB/s
     http_req_blocked...............: avg=22.27µs  min=1.66µs  med=3.59µs   max=25.24ms p(90)=5.75µs   p(95)=9.12µs  
     http_req_connecting............: avg=15.53µs  min=0s      med=0s       max=25.17ms p(90)=0s       p(95)=0s      
     http_req_duration..............: avg=855.55ms min=5.32ms  med=556.59ms max=8.26s   p(90)=2.11s    p(95)=2.75s   
       { expected_response:true }...: avg=855.55ms min=5.32ms  med=556.59ms max=8.26s   p(90)=2.11s    p(95)=2.75s   
     http_req_failed................: 0.00%   0 out of 31834
     http_req_receiving.............: avg=2.59ms   min=36.68µs med=78.04µs  max=1.46s   p(90)=177.93µs p(95)=352.46µs
     http_req_sending...............: avg=225.91µs min=88.6µs  med=167.22µs max=40.75ms p(90)=208.53µs p(95)=307.18µs
     http_req_tls_handshaking.......: avg=0s       min=0s      med=0s       max=0s      p(90)=0s       p(95)=0s      
     http_req_waiting...............: avg=852.73ms min=5.11ms  med=555.08ms max=8.26s   p(90)=2.1s     p(95)=2.74s   
     http_reqs......................: 31834   612.151103/s
     iteration_duration.............: avg=855.89ms min=5.45ms  med=556.76ms max=8.26s   p(90)=2.11s    p(95)=2.75s   
     iterations.....................: 31834   612.151103/s
     vus............................: 20      min=20             max=1000
     vus_max........................: 1000    min=1000           max=1000

    CPU consumption........................: 92.59% 
    Consumption of Memory ........................: 1.4% GB


### Gin
post.list
bind
data_1MB_list
c.JSON(http.StatusOK, my)

        /\      Grafana   /‾‾/  
    /\  /  \     |\  __   /  /   
   /  \/    \    | |/ /  /   ‾‾\ 
  /          \   |   (  |  (‾)  |
 / __________ \  |_|\_\  \_____/ 

     execution: local
        script: post.file.list.payload.js
        output: -

     scenarios: (100.00%) 1 scenario, 1000 max VUs, 1m22s max duration (incl. graceful stop):
              * default: Up to 1000 looping VUs for 52s over 3 stages (gracefulRampDown: 30s, gracefulStop: 30s)


     ✓ status is 200 or 201
     ✗ response contains JSON
      ↳  0% — ✓ 0 / ✗ 14290

     checks.........................: 50.00% 14290 out of 28580
     data_received..................: 5.0 GB 97 MB/s
     data_sent......................: 7.1 GB 137 MB/s
     http_req_blocked...............: avg=38.02µs  min=2.09µs   med=4.11µs   max=10.62ms p(90)=7.65µs   p(95)=191.94µs
     http_req_connecting............: avg=26.77µs  min=0s       med=0s       max=10.55ms p(90)=0s       p(95)=134.55µs
     http_req_duration..............: avg=1.94s    min=9.41ms   med=1.31s    max=16.79s  p(90)=4.58s    p(95)=5.94s   
       { expected_response:true }...: avg=1.94s    min=9.41ms   med=1.31s    max=16.79s  p(90)=4.58s    p(95)=5.94s   
     http_req_failed................: 0.00%  0 out of 14290
     http_req_receiving.............: avg=9ms      min=72.33µs  med=187.85µs max=3.81s   p(90)=485.88µs p(95)=1.35ms  
     http_req_sending...............: avg=306.27µs min=127.34µs med=247.78µs max=22.93ms p(90)=311.45µs p(95)=508.74µs
     http_req_tls_handshaking.......: avg=0s       min=0s       med=0s       max=0s      p(90)=0s       p(95)=0s      
     http_req_waiting...............: avg=1.93s    min=9.08ms   med=1.31s    max=16.79s  p(90)=4.56s    p(95)=5.88s   
     http_reqs......................: 14290  274.787242/s
     iteration_duration.............: avg=1.94s    min=9.58ms   med=1.31s    max=16.79s  p(90)=4.58s    p(95)=5.94s   
     iterations.....................: 14290  274.787242/s
     vus............................: 44     min=21             max=1000
     vus_max........................: 1000   min=1000           max=1000

    CPU consumption........................: 93.56% 
    Consumption of Memory ........................: 2.4% GB


### Gin
post.list
byte
data_1MB_list
c.JSON(http.StatusOK, my)


       /\      Grafana   /‾‾/  
    /\  /  \     |\  __   /  /   
   /  \/    \    | |/ /  /   ‾‾\ 
  /          \   |   (  |  (‾)  |
 / __________ \  |_|\_\  \_____/ 

     execution: local
        script: post.file.list.payload.js
        output: -

     scenarios: (100.00%) 1 scenario, 1000 max VUs, 1m22s max duration (incl. graceful stop):
              * default: Up to 1000 looping VUs for 52s over 3 stages (gracefulRampDown: 30s, gracefulStop: 30s)


     ✓ status is 200 or 201
     ✗ response contains JSON
      ↳  0% — ✓ 0 / ✗ 14295

     checks.........................: 50.00% 14295 out of 28590
     data_received..................: 5.0 GB 97 MB/s
     data_sent......................: 7.1 GB 137 MB/s
     http_req_blocked...............: avg=42.92µs  min=2.01µs   med=4.4µs    max=13.96ms p(90)=8.48µs   p(95)=189.23µs
     http_req_connecting............: avg=30.63µs  min=0s       med=0s       max=12.82ms p(90)=0s       p(95)=131.31µs
     http_req_duration..............: avg=1.96s    min=7.79ms   med=1.03s    max=23.21s  p(90)=5.56s    p(95)=7.11s   
       { expected_response:true }...: avg=1.96s    min=7.79ms   med=1.03s    max=23.21s  p(90)=5.56s    p(95)=7.11s   
     http_req_failed................: 0.00%  0 out of 14295
     http_req_receiving.............: avg=5.21ms   min=71.76µs  med=180.93µs max=3.41s   p(90)=562.96µs p(95)=1.51ms  
     http_req_sending...............: avg=324.71µs min=122.85µs med=244.85µs max=37.22ms p(90)=315.74µs p(95)=513.38µs
     http_req_tls_handshaking.......: avg=0s       min=0s       med=0s       max=0s      p(90)=0s       p(95)=0s      
     http_req_waiting...............: avg=1.96s    min=7.35ms   med=1.03s    max=23.2s   p(90)=5.55s    p(95)=7.09s   
     http_reqs......................: 14295  274.176572/s
     iteration_duration.............: avg=1.96s    min=7.96ms   med=1.03s    max=23.21s  p(90)=5.56s    p(95)=7.11s   
     iterations.....................: 14295  274.176572/s
     vus............................: 115    min=21             max=1000
     vus_max........................: 1000   min=1000           max=1000

     CPU consumption........................: 94.33% 
     Consumption of Memory ........................: 2.3% GB

### ShouldBind
post.list
ShouldBind
data_1MB_list
c.JSON(http.StatusOK, my)

      /\      Grafana   /‾‾/  
    /\  /  \     |\  __   /  /   
   /  \/    \    | |/ /  /   ‾‾\ 
  /          \   |   (  |  (‾)  |
 / __________ \  |_|\_\  \_____/ 

     execution: local
        script: post.file.list.payload.js
        output: -

     scenarios: (100.00%) 1 scenario, 1000 max VUs, 1m22s max duration (incl. graceful stop):
              * default: Up to 1000 looping VUs for 52s over 3 stages (gracefulRampDown: 30s, gracefulStop: 30s)


     ✓ status is 200 or 201
     ✗ response contains JSON
      ↳  0% — ✓ 0 / ✗ 13701

     checks.........................: 50.00% 13701 out of 27402
     data_received..................: 4.8 GB 93 MB/s
     data_sent......................: 6.8 GB 131 MB/s
     http_req_blocked...............: avg=39.63µs  min=2.23µs   med=4.35µs   max=10.02ms p(90)=8.32µs   p(95)=195.83µs
     http_req_connecting............: avg=28.98µs  min=0s       med=0s       max=9.87ms  p(90)=0s       p(95)=136.8µs 
     http_req_duration..............: avg=2.09s    min=12.32ms  med=1.01s    max=22.05s  p(90)=5.93s    p(95)=7.78s   
       { expected_response:true }...: avg=2.09s    min=12.32ms  med=1.01s    max=22.05s  p(90)=5.93s    p(95)=7.78s   
     http_req_failed................: 0.00%  0 out of 13701
     http_req_receiving.............: avg=6.62ms   min=72.42µs  med=184.86µs max=1.92s   p(90)=557.93µs p(95)=1.47ms  
     http_req_sending...............: avg=312.82µs min=146.84µs med=249.49µs max=25.84ms p(90)=339.07µs p(95)=534.91µs
     http_req_tls_handshaking.......: avg=0s       min=0s       med=0s       max=0s      p(90)=0s       p(95)=0s      
     http_req_waiting...............: avg=2.08s    min=11.42ms  med=1s       max=22.05s  p(90)=5.91s    p(95)=7.77s   
     http_reqs......................: 13701  262.661443/s
     iteration_duration.............: avg=2.09s    min=12.93ms  med=1.01s    max=22.05s  p(90)=5.93s    p(95)=7.78s   
     iterations.....................: 13701  262.661443/s
     vus............................: 206    min=19             max=993 
     vus_max........................: 1000   min=1000           max=1000

     CPU consumption........................: 94.12% 
     Consumption of Memory ........................: 2.4% GB


### Gin
post.list
ShouldBindBodyWithJSON
data_1MB_list
c.JSON(http.StatusOK, my)

      /\      Grafana   /‾‾/  
    /\  /  \     |\  __   /  /   
   /  \/    \    | |/ /  /   ‾‾\ 
  /          \   |   (  |  (‾)  |
 / __________ \  |_|\_\  \_____/ 

     execution: local
        script: post.file.list.payload.js
        output: -

     scenarios: (100.00%) 1 scenario, 1000 max VUs, 1m22s max duration (incl. graceful stop):
              * default: Up to 1000 looping VUs for 52s over 3 stages (gracefulRampDown: 30s, gracefulStop: 30s)


     ✓ status is 200 or 201
     ✗ response contains JSON
      ↳  0% — ✓ 0 / ✗ 13574

     checks.........................: 50.00% 13574 out of 27148
     data_received..................: 4.8 GB 92 MB/s
     data_sent......................: 6.8 GB 130 MB/s
     http_req_blocked...............: avg=40.92µs  min=2.18µs   med=4.51µs   max=10.94ms p(90)=9.4µs    p(95)=188.72µs
     http_req_connecting............: avg=28.66µs  min=0s       med=0s       max=10.87ms p(90)=0s       p(95)=131.81µs
     http_req_duration..............: avg=2.09s    min=8.87ms   med=1.08s    max=19.5s   p(90)=5.93s    p(95)=8.14s   
       { expected_response:true }...: avg=2.09s    min=8.87ms   med=1.08s    max=19.5s   p(90)=5.93s    p(95)=8.14s   
     http_req_failed................: 0.00%  0 out of 13574
     http_req_receiving.............: avg=7.33ms   min=72.03µs  med=188.04µs max=1.96s   p(90)=540.16µs p(95)=1.73ms  
     http_req_sending...............: avg=313.24µs min=124.82µs med=246.15µs max=19.82ms p(90)=333.38µs p(95)=524.64µs
     http_req_tls_handshaking.......: avg=0s       min=0s       med=0s       max=0s      p(90)=0s       p(95)=0s      
     http_req_waiting...............: avg=2.08s    min=8.28ms   med=1.07s    max=19.5s   p(90)=5.92s    p(95)=8.13s   
     http_reqs......................: 13574  260.978126/s
     iteration_duration.............: avg=2.09s    min=9.3ms    med=1.08s    max=19.51s  p(90)=5.93s    p(95)=8.15s   
     iterations.....................: 13574  260.978126/s
     vus............................: 31     min=21             max=995 
     vus_max........................: 1000   min=1000           max=1000

     CPU consumption........................: 93.54% 
     Consumption of Memory ........................: 3.4% GB
